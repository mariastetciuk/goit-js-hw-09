{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAkCxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAGtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IA1CPR,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOjB,EAAQkB,OACvBC,EAAOF,OAAOhB,EAAOiB,OACrBE,EAASH,OAAOf,EAASgB,QAGzBE,GAAU,GAAKJ,EAAQ,GAAKG,EAAO,IACrCE,EAAA1B,GAAS2B,OAAOC,QAAS,sCAG3B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAEhCrB,EADWqB,EACaR,GACrBS,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBgB,EAAA1B,GAAS2B,OAAOK,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBgB,EAAA1B,GAAS2B,OAAOC,QACd,sBAAqCK,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDW,GAASG,EAEXtB,EAAOiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', onHandleForm);\n\nfunction onHandleForm(event) {\n  event.preventDefault();\n\n  let delay = Number(delayEl.value);\n  let step = Number(stepEl.value);\n  let amount = Number(amountEl.value);\n  let position = 0;\n\n  if (amount <= 0 || delay < 0 || step < 0) {\n    Notiflix.Notify.failure(` Please input correct values (>=0)`);\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  formEl.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.c5575f58.js.map"}